@startuml
skinparam backgroundColor #fff
skinparam defaultFontColor #37474f
skinparam defaultFontSize 18
skinparam defaultFontName serif
skinparam defaultFontStyle normal
skinparam classAttributeIconSize 0
skinparam classBackgroundColor #fff
skinparam classBorderColor #000
skinparam classArrowColor #000

hide class circle

class "Spécialité" as specialty{
-id : long
-abb : String
-nom : String
-DeAnnée : int
-JusquAnnée : int
trouverParAnnée(annee : int)
}

class "Module" as module{
-id : long
-abb : String
-nom : String
-annee : int
-semestre : int
}

class  "Utilisateur"  as user{
-id : long
-nomUtilisateur : String
-passe : String
-prenom : String
-nom : String
-description : String
-email : String
-annee : int
-spécialité : Specialite
-ImageProfil : String
-admin : boolean
-vérifié : boolean

trouverPar(nomUtilisateur:String)
trouverPar(nomUtilisateur:String,passe : String)
envoyerEmailInscription(id : long,email : String)
validerCompte(id : long)
envoyerEmailRécupération(id : long , email : String)
changerPasse(id: Long, pass: String)
MettreÀJourProfil(ut : Utilisateur)
}



class "Contribution" as contribution {
-id : long
-description : String
-date : Date
}

class "Publication" as post{
-titre :string
-trouverPar(filtre : List())
-supprimer(id: long)
}

class "Catégorie" as category{
  -id : Long,
  -titre: String,
  -description: String,
  -icon: String,
}

class "Commentaires" as comments {
 trouverAvecPublication(idPub : int)
}


class "Attachement" as media{
id : long
nom : String
link : String
trouverAvecPublication(idPub : int)
}

user  *-right- "0.*" contribution : "  est contribué par   "
user  "1.*" --o "1" specialty : "Appartient à"
specialty  *- "1.*" module : "est enseigné dans            "
post  "0.*" --o "0.1" module : "Appartient à     "
post  "0.*" --o "0.1" specialty : "Appartient à     "
post  "0.*" --o "1" category : "Appartient à     "


post "1.*" o-- "0.*" media : "Attaché"
contribution <|- post
contribution <|- comments
post "1" -* "0.*" comments : \tcontient\t
@enduml